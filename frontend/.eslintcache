[{"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\App.jsx":"2","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\store.js":"3","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Header.jsx":"5","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ShippingScreen.jsx":"6","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\CartScreen.jsx":"7","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\LoginScreen.jsx":"8","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\RegisterScreen.jsx":"9","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PaymentScreen.jsx":"10","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"11","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderScreen.jsx":"12","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductListScreen.jsx":"13","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProfileScreens.jsx":"14","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductScreen.jsx":"15","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\HomeScreen.jsx":"16","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\userListScreen.jsx":"17","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductEditScreen.jsx":"18","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\UserEditScreen.jsx":"19","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderListScreen.jsx":"20","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\orderReducers.js":"21","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\productReducers.js":"22","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\cartReducer.js":"24","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\userAction.js":"25","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SearchBox.jsx":"26","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\orderAction.js":"27","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\cartActions.js":"28","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\productActions.js":"29","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Rating.js":"30","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\cartConstant.js":"31","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\productConstant.js":"32","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\userConstants.js":"33","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\orderConstant.js":"34","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\FormContainer.jsx":"35","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Message.jsx":"36","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Loader.jsx":"37","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\CheckoutSteps.jsx":"38","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Paginate.jsx":"39","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Meta.jsx":"40","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCarousel.jsx":"41","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Footer\\Footer.jsx":"42","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SwiperJs.jsx":"43","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCard\\ProductCard.jsx":"44","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\TitleComp\\Title.jsx":"45","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\NotFound.jsx":"46","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyacountScreen.jsx":"47","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyAcountScreen.jsx":"48","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyProfile.jsx":"49","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyDashboard.jsx":"50","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyOrders.jsx":"51","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\Order.jsx":"52"},{"size":596,"mtime":1608064348994,"results":"53","hashOfConfig":"54"},{"size":3112,"mtime":1628807465311,"results":"55","hashOfConfig":"54"},{"size":2518,"mtime":1627818921596,"results":"56","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"54"},{"size":3363,"mtime":1628693489846,"results":"58","hashOfConfig":"54"},{"size":2598,"mtime":1608749591450,"results":"59","hashOfConfig":"54"},{"size":6985,"mtime":1628809095162,"results":"60","hashOfConfig":"54"},{"size":2515,"mtime":1627331846558,"results":"61","hashOfConfig":"54"},{"size":3230,"mtime":1627899174983,"results":"62","hashOfConfig":"54"},{"size":2160,"mtime":1608820782624,"results":"63","hashOfConfig":"54"},{"size":5672,"mtime":1609169265384,"results":"64","hashOfConfig":"54"},{"size":7942,"mtime":1627495920880,"results":"65","hashOfConfig":"54"},{"size":4129,"mtime":1609116487114,"results":"66","hashOfConfig":"54"},{"size":6965,"mtime":1627511506185,"results":"67","hashOfConfig":"54"},{"size":8349,"mtime":1628693226512,"results":"68","hashOfConfig":"54"},{"size":4440,"mtime":1628769954575,"results":"69","hashOfConfig":"54"},{"size":3084,"mtime":1627487866520,"results":"70","hashOfConfig":"54"},{"size":6156,"mtime":1609095762032,"results":"71","hashOfConfig":"54"},{"size":3214,"mtime":1609112387924,"results":"72","hashOfConfig":"54"},{"size":2329,"mtime":1627495886178,"results":"73","hashOfConfig":"54"},{"size":3252,"mtime":1609168729871,"results":"74","hashOfConfig":"54"},{"size":4295,"mtime":1627819517408,"results":"75","hashOfConfig":"54"},{"size":3879,"mtime":1609076002446,"results":"76","hashOfConfig":"54"},{"size":1358,"mtime":1628660410196,"results":"77","hashOfConfig":"54"},{"size":7035,"mtime":1628294065197,"results":"78","hashOfConfig":"54"},{"size":881,"mtime":1627870293374,"results":"79","hashOfConfig":"54"},{"size":4853,"mtime":1627329495336,"results":"80","hashOfConfig":"54"},{"size":1268,"mtime":1608749231564,"results":"81","hashOfConfig":"54"},{"size":6752,"mtime":1627819463191,"results":"82","hashOfConfig":"54"},{"size":1872,"mtime":1627286501692,"results":"83","hashOfConfig":"54"},{"size":282,"mtime":1608588756419,"results":"84","hashOfConfig":"54"},{"size":1696,"mtime":1627819370758,"results":"85","hashOfConfig":"54"},{"size":1506,"mtime":1608663841393,"results":"86","hashOfConfig":"54"},{"size":1266,"mtime":1608845316077,"results":"87","hashOfConfig":"54"},{"size":397,"mtime":1608666169136,"results":"88","hashOfConfig":"54"},{"size":287,"mtime":1608140231656,"results":"89","hashOfConfig":"54"},{"size":347,"mtime":1609151333409,"results":"90","hashOfConfig":"54"},{"size":1292,"mtime":1608748622240,"results":"91","hashOfConfig":"54"},{"size":812,"mtime":1627290118540,"results":"92","hashOfConfig":"54"},{"size":524,"mtime":1627232684735,"results":"93","hashOfConfig":"54"},{"size":1315,"mtime":1628471628805,"results":"94","hashOfConfig":"54"},{"size":3602,"mtime":1627134043402,"results":"95","hashOfConfig":"54"},{"size":1085,"mtime":1627160694862,"results":"96","hashOfConfig":"54"},{"size":2991,"mtime":1628659286263,"results":"97","hashOfConfig":"54"},{"size":634,"mtime":1628520082156,"results":"98","hashOfConfig":"54"},{"size":979,"mtime":1628810439787,"results":"99","hashOfConfig":"54"},{"size":632,"mtime":1627833641771,"results":"100","hashOfConfig":"54"},{"size":2910,"mtime":1628506993111,"results":"101","hashOfConfig":"54"},{"size":4575,"mtime":1628549086901,"results":"102","hashOfConfig":"54"},{"size":3664,"mtime":1628116013148,"results":"103","hashOfConfig":"54"},{"size":1947,"mtime":1628548094846,"results":"104","hashOfConfig":"54"},{"size":1583,"mtime":1628549430087,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1ae4yog",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\index.js",[],["225","226"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\App.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\store.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\CartScreen.jsx",["227"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport NotFound from './NotFound'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n\r\n  return (\r\n    <Row>\r\n      {\r\n        cartItems.length === 0 ? (\r\n          <NotFound />\r\n        ) : (\r\n          <>\r\n            <Col md={8}>\r\n              <h1>Shopping Cart</h1>\r\n              <ListGroup variant='flush'>\r\n                {cartItems.map((item) => (\r\n                  <ListGroup.Item key={item.product}>\r\n                    <Row>\r\n                      <Col md={2}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={2}><span className='tk'>৳</span>{item.price}</Col>\r\n                      <Col md={2}>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={item.qty}\r\n                          onChange={(e) =>\r\n                            dispatch(\r\n                              addToCart(item.product, Number(e.target.value))\r\n                            )\r\n                          }\r\n                        >\r\n                          {[...Array(item.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <Button\r\n                          type='button'\r\n                          variant='light'\r\n                          onClick={() => removeFromCartHandler(item.product)}\r\n                        >\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n              )\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>\r\n                      Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                      items\r\n                    </h2>\r\n                    <span className='tk'>৳</span>\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn-block'\r\n                      disabled={cartItems.length === 0}\r\n                      onClick={checkoutHandler}\r\n                    >\r\n                      Proceed To Checkout\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        )\r\n      }\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <Row>\r\n//       <Col md={8}>\r\n//         <h1>Shopping Cart</h1>\r\n//         {cartItems.length === 0 ? (\r\n//           <Message>\r\n//             Your cart is empty <Link to='/'>Go Back</Link>\r\n//           </Message>\r\n//         ) : (\r\n//           <ListGroup variant='flush'>\r\n//             {cartItems.map((item) => (\r\n//               <ListGroup.Item key={item.product}>\r\n//                 <Row>\r\n//                   <Col md={2}>\r\n//                     <Image src={item.image} alt={item.name} fluid rounded />\r\n//                   </Col>\r\n//                   <Col md={3}>\r\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n//                   </Col>\r\n//                   <Col md={2}><span className='tk'>৳</span>{item.price}</Col>\r\n//                   <Col md={2}>\r\n//                     <Form.Control\r\n//                       as='select'\r\n//                       value={item.qty}\r\n//                       onChange={(e) =>\r\n//                         dispatch(\r\n//                           addToCart(item.product, Number(e.target.value))\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {[...Array(item.countInStock).keys()].map((x) => (\r\n//                         <option key={x + 1} value={x + 1}>\r\n//                           {x + 1}\r\n//                         </option>\r\n//                       ))}\r\n//                     </Form.Control>\r\n//                   </Col>\r\n//                   <Col md={2}>\r\n//                     <Button\r\n//                       type='button'\r\n//                       variant='light'\r\n//                       onClick={() => removeFromCartHandler(item.product)}\r\n//                     >\r\n//                       <i className='fas fa-trash'></i>\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         )}\r\n//       </Col>\r\n//       <Col md={4}>\r\n//         <Card>\r\n//           <ListGroup variant='flush'>\r\n//             <ListGroup.Item>\r\n//               <h2>\r\n//                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n//                 items\r\n//               </h2>\r\n//               <span className='tk'>৳</span>\r\n//               {cartItems\r\n//                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n//                 .toFixed(2)}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Button\r\n//                 type='button'\r\n//                 className='btn-block'\r\n//                 disabled={cartItems.length === 0}\r\n//                 onClick={checkoutHandler}\r\n//               >\r\n//                 Proceed To Checkout\r\n//               </Button>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Card>\r\n//       </Col>\r\n//     </Row>","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderScreen.jsx",["228"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, deliverOrder } from '../actions/orderAction'\r\nimport { ORDER_DELIVER_RESET } from '../constants/orderConstant'\r\n\r\n\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderId = match.params.id\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successDeliver) {\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n\r\n    }, [dispatch, orderId, order, successDeliver])\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            <>\r\n                <h1>Order ID: {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name: </strong>{order.user.name}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Email: </strong>{order.user.email}\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address},\r\n                                    {order.shippingAddress.city}{' '}\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {' '}\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? (\r\n                                    <Message variant='success'>Delivered On {order.deliveredAt}</Message>\r\n                                ) : (\r\n                                    <Message variant='danger'>Not delivered</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message>Order is empty</Message>\r\n                                ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            src={item.image}\r\n                                                            alt={item.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x <span className='tk'>৳</span>{item.price} = <span className='tk'>৳</span>{item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                            Mark as Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductListScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProfileScreens.jsx",["229"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport { listMyOrders } from '../actions/orderAction'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ProfileScreens = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (password !== confirmPassword) {\r\n            // setMessage('Passwords do not match')\r\n            toast.error('Passwords do not match', {\r\n                position: \"top-left\",\r\n                autoClose: 1500,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n\r\n            });\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n            toast.success('Profile updated 🦄', {\r\n                position: \"top-left\",\r\n                \r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead className='text-center'>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fa fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreens","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductScreen.jsx",["230"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstant'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const productId = match.params.id\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    // history.push(`/cart/${productId}?qty=${qty}`)\r\n    dispatch(addToCart(productId, qty))\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-primary my-3' to='/'>\r\n        <i className=\"fas fa-angle-left font-size-16\"></i> Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: <span className='tk'>৳</span>{product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong><span className='tk'>৳</span>{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <div className='ml-3 mt-3'>\r\n                <h4>Ratings & Reviews of {product.name}</h4>\r\n              </div>\r\n\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\userListScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductEditScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\UserEditScreen.jsx",["231"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch,userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderListScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\cartReducer.js",["232","233"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstant\";\r\n\r\nconst toast=''\r\n\r\nexport const cartReducer = (\r\n  state = {\r\n    cartItems: [],\r\n    shippingAddress: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    //   case CART_CLEAR_ITEMS:\r\n    //     return {\r\n    //       ...state,\r\n    //       cartItems: [],\r\n    //     }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SearchBox.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\productConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\orderConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\FormContainer.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Message.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Loader.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\CheckoutSteps.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Paginate.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Meta.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCarousel.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SwiperJs.jsx",[],["234","235"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCard\\ProductCard.jsx",["236","237","238","239","240"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Rating from \"../Rating\";\r\nimport \"./ProductCard.css\";\r\nimport { addToCart } from '../../actions/cartActions'\r\n\r\n\r\nconst Product = ({ product }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const productId = product._id\r\n  const dispatch= useDispatch()\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product:ProductStock } = productDetails\r\n  \r\n  const addToCartHandler = (e, id) => {\r\n    e.preventDefault()\r\n    setQty(qty + 1)\r\n    dispatch(addToCart(id,qty))\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"my-2\"\r\n      style={{ width: \"180px\", height: \"322px\" }}\r\n    >\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img className=\"product-img img-fluid\" src={product.image} variant=\"top\" />\r\n      </Link>\r\n      <Card.Body className=\"p-2\">\r\n        <Card.Title as=\"div\" className=\"card-title text-sm\">\r\n          <span style={{ display: \"block\", wordBreak: 'break-all' }}>\r\n            {\r\n              product.name.length > 45 ? `${product.name.substring(0, 45)}...` : product.name\r\n            }\r\n          </span>\r\n        </Card.Title>\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={` (${product.numReviews})`}\r\n            color=\"rgba(45,55,72,1)\"\r\n          />\r\n        </Card.Text>\r\n        <div className='price-cart-icon-wrapper'>\r\n          <Card.Text as=\"h3\" style={{ fontSize: \"18px\" }} className=' product-price'>\r\n            &#2547;{product.price}\r\n          </Card.Text>\r\n          {/* <Card.Text as=\"div\" style={{ fontSize: \"18px\", display: 'inline-block', float: 'right' }}>\r\n              cart\r\n            </Card.Text> */}\r\n          <button className='btn add-to-cart-button' onClick={(e) => addToCartHandler(e, product._id)} disabled={product.countInStock ==0}>\r\n            <i class=\"fas fa-cart-plus\"></i>        {/*  add to cart ico */}\r\n          </button>\r\n        </div>\r\n\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n\r\n// <Card className=\"my-2\" style={{ width: \"180px\", height: \"325px\" }} card-hover>\r\n//       <Link to={`/product/${product._id}`}>\r\n//         <Card.Img className=\"product-img\" src={product.image} variant=\"top\" />\r\n//       </Link>\r\n//       <Card.Body className='p-2'>\r\n//         <Link to={`/product/${product._id}`}>\r\n//           <Card.Title as=\"div\" className='card-title text-sm'>\r\n//             <span>{product.name.substring(0, 15)}</span>\r\n//           </Card.Title>\r\n//         </Link>\r\n//         <Card.Text as=\"div\">\r\n//           <Rating value={product.rating} text={` (${product.numReviews})`} />\r\n//         </Card.Text>\r\n//         <Card.Text as=\"h3\" style={{ fontSize: \"18px\" }}>\r\n//           &#2547;{product.price}\r\n//         </Card.Text>\r\n//       </Card.Body>\r\n//     </Card>\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\TitleComp\\Title.jsx",["241"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Title.module.css'\r\n\r\nconst Title = ({ text, textColor, icon, iconColor,className }) => {\r\n   return (\r\n      <>\r\n         <h2 className={`${classes.titleText} ${className} text-center-sm `} style={{ color: textColor? textColor:'#3e3f3a' }}>\r\n            {text} {icon && <span style={iconColor && { color: iconColor }}>{icon}</span>}\r\n         </h2>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\nTitle.propTypes = {\r\n   text: PropTypes.string.isRequired,\r\n   textColor: PropTypes.string,\r\n   icon: PropTypes.any,\r\n   icon: PropTypes.string\r\n};\r\n\r\nexport default Title\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\NotFound.jsx",["242"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport img404 from '../assests/img/404.jpg'\r\n\r\n\r\nconst NotFound = ({img}) => {\r\n   return (\r\n      <>\r\n         <div class=\"col-lg-12\">\r\n            <div class=\"error-section ptb-50\">\r\n               <div class=\"error-section-head\"><h1>404</h1></div>\r\n               <div class=\"error-section-subhead\"><h4>PAGE NOT FOUND</h4></div>\r\n               <div class=\"error-section-details\">\r\n                  <p>\r\n                     Sorry but the page you are looking for does not exist, have been removed, name changed or is temporarity unavailable.\r\n                  </p>\r\n               </div>\r\n               <div class=\"error-section-button\">\r\n                  <Link to='/'>\r\n                     <button className=\"button btn-primary\">Back to home page</button>\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default NotFound\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyacountScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyAcountScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyProfile.jsx",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userAction'\r\nimport { listMyOrders } from '../../actions/orderAction'\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\nconst MyProfile = () => {\r\n\r\n   const [name, setName] = useState('')\r\n   const [email, setEmail] = useState('')\r\n   const [password, setPassword] = useState('')\r\n   const [confirmPassword, setConfirmPassword] = useState('')\r\n   const [message, setMessage] = useState(null)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { loading, error, user } = userDetails\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n   const { success } = userUpdateProfile\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy)\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n   return (\r\n      <div className=\"col-md-9\">\r\n         <div className=\"user-account-content-tab\">\r\n            <div className=\"card\">\r\n               <div className=\"card-header\">\r\n                  <h5 className=\"mb-0 h6\">Basic Info</h5>\r\n               </div>\r\n               <div className=\"card-body\">\r\n                  <form >\r\n                     <input type=\"hidden\" name=\"_token\" value=\"GS0rjD2kz7v6wPZHBMOooa01GoRWlNstHxKQnTdU\" />\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Your Name</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" name=\"name\" value={name} required=\"\" />\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Email</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input type=\"text\" className=\"form-control\" placeholder=\"Your Phone\" name=\"phone\" value={email} readonly=\"\" />\r\n                        </div>\r\n                     </div>\r\n                     {/* profile photo */}\r\n                     {/* <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Photo</label>\r\n                        <div className=\"col-md-10\">\r\n                           <div className=\"input-group\" data-toggle=\"aizuploader\" data-type=\"image\">\r\n                              <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-soft-secondary font-weight-medium\">Browse</div>\r\n                              </div>\r\n                              <div className=\"form-control file-amount\">Choose file</div>\r\n                              <input type=\"hidden\" name=\"photo\" value=\"\" className=\"selected-files\" />\r\n                           </div>\r\n                           <div className=\"file-preview box sm\"></div>\r\n                        </div>\r\n                     </div> */}\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Password</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input type=\"password\" className=\"form-control\" placeholder=\"New Password\" name=\"new_password\" />\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Confirm Password</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"confirm_password\" />\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div className=\"form-group mb-0 text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Update Profile</button>\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyProfile\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyDashboard.jsx",["273"],"import React,{useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Title from '../TitleComp/Title'\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const cart = useSelector((state) => state.cart)\r\n   const { cartItems } = cart\r\n\r\n   useEffect(()=>{\r\n\r\n   },[])\r\n\r\n   return (\r\n      <>\r\n         <div className=\"col-md-9\">\r\n            <div className=\"row\">\r\n               <div class=\"col-12\">\r\n                  <Title text='Dashboard' className='page-heading'/>\r\n               </div>\r\n            </div>\r\n            <div className=\"row \">\r\n\r\n               <div className=\"col-md-4\">\r\n                  <div className=\"bg-grad-1 text-white rounded-lg mb-4 overflow-hidden\">\r\n                     <div className=\"px-3 pt-3\">\r\n                        <div className=\"h3 fw-700\">\r\n                           {cartItems && cartItems.reduce((acc, item) => acc + item.qty, 0)} Product\r\n                        </div>\r\n                        <div className=\"opacity-50\">in your cart</div>\r\n                     </div>\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path\r\n                           fill=\"rgba(255,255,255,0.3)\"\r\n                           fill-opacity=\"1\"\r\n                           d=\"M0,192L30,208C60,224,120,256,180,245.3C240,235,300,181,360,144C420,107,480,85,540,96C600,107,660,149,720,154.7C780,160,840,128,900,117.3C960,107,1020,117,1080,112C1140,107,1200,85,1260,74.7C1320,64,1380,64,1410,64L1440,64L1440,320L1410,320C1380,320,1320,320,1260,320C1200,320,1140,320,1080,320C1020,320,960,320,900,320C840,320,780,320,720,320C660,320,600,320,540,320C480,320,420,320,360,320C300,320,240,320,180,320C120,320,60,320,30,320L0,320Z\"\r\n                        ></path>\r\n                     </svg>\r\n                  </div>\r\n               </div>\r\n               <div className=\"col-md-4\">\r\n                  <div className=\"bg-grad-3 text-white rounded-lg mb-4 overflow-hidden\">\r\n                     <div className=\"px-3 pt-3\">\r\n                        <div className=\"h3 fw-700\"> Orders</div>\r\n                        <div className=\"opacity-50\">My Order</div>\r\n                     </div>\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path\r\n                           fill=\"rgba(255,255,255,0.3)\"\r\n                           fill-opacity=\"1\"\r\n                           d=\"M0,192L26.7,192C53.3,192,107,192,160,202.7C213.3,213,267,235,320,218.7C373.3,203,427,149,480,117.3C533.3,85,587,75,640,90.7C693.3,107,747,149,800,149.3C853.3,149,907,107,960,112C1013.3,117,1067,171,1120,202.7C1173.3,235,1227,245,1280,213.3C1333.3,181,1387,107,1413,69.3L1440,32L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z\"\r\n                        ></path>\r\n                     </svg>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div class=\"row gutters-10\">\r\n               <div class=\"col-md-9\">\r\n                  <div class=\"card\">\r\n                     <div class=\"card-header\">\r\n                        <h6 class=\"mb-0\">Default Shipping Address</h6>\r\n                     </div>\r\n                     <div class=\"card-body\"></div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyOrders.jsx",["274","275","276","277","278"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../../actions/userAction'\r\nimport { listMyOrders } from '../../actions/orderAction'\r\nimport Title from '../TitleComp/Title'\r\nimport Order from './Order'\r\nimport Loader from '../Loader'\r\nimport './MyOrders.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst MyProfile = ({match}) => {\r\n   console.log(match)\r\n   const dispatch = useDispatch()\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { loading, error, user } = userDetails\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy)\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n   useEffect(() => {\r\n      \r\n      if (!userInfo) {\r\n         //  history.push('/login')\r\n      } else {\r\n         if (!user.name) {\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n         }\r\n      }\r\n   }, [dispatch, userInfo, user])\r\n\r\n   return (\r\n      <div className=\"col-md-9 \">\r\n         <Title text='Order History' className=\"small-title\" />\r\n         <div className=\"user-account-content-tab p-0 \">\r\n            <div class=\"row mt-2\">\r\n               <div class=\"col-lg-12\">\r\n                  {\r\n                     loadingOrders ? <Loader /> :\r\n\r\n                        (orders.map(order => (\r\n                           <Link to={`/orders/${order._id}`}>\r\n                              <Order key={order._id} order={order} />\r\n                           </Link>\r\n\r\n                        )))\r\n                  }\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n{/* <h2 style={{ textAlign: \"center\", marginTop: \"20px\" }} className='text-warning'>No orders found</h2>: */ }\r\nexport default MyProfile\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\Order.jsx",[],["279","280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":15},{"ruleId":"289","severity":1,"message":"290","line":48,"column":8,"nodeType":"291","endLine":48,"endColumn":50,"suggestions":"292"},{"ruleId":"285","severity":1,"message":"293","line":16,"column":21,"nodeType":"287","messageId":"288","endLine":16,"endColumn":31},{"ruleId":"289","severity":1,"message":"294","line":47,"column":6,"nodeType":"291","endLine":47,"endColumn":45,"suggestions":"295"},{"ruleId":"289","severity":1,"message":"296","line":43,"column":6,"nodeType":"291","endLine":43,"endColumn":44,"suggestions":"297"},{"ruleId":"285","severity":1,"message":"298","line":6,"column":3,"nodeType":"287","messageId":"288","endLine":6,"endColumn":19},{"ruleId":"285","severity":1,"message":"299","line":9,"column":7,"nodeType":"287","messageId":"288","endLine":9,"endColumn":12},{"ruleId":"281","replacedBy":"300"},{"ruleId":"283","replacedBy":"301"},{"ruleId":"285","severity":1,"message":"302","line":12,"column":9,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"303","line":15,"column":11,"nodeType":"287","messageId":"288","endLine":15,"endColumn":18},{"ruleId":"285","severity":1,"message":"304","line":15,"column":20,"nodeType":"287","messageId":"288","endLine":15,"endColumn":25},{"ruleId":"285","severity":1,"message":"305","line":15,"column":35,"nodeType":"287","messageId":"288","endLine":15,"endColumn":47},{"ruleId":"306","severity":1,"message":"307","line":54,"column":135,"nodeType":"308","messageId":"309","endLine":54,"endColumn":137},{"ruleId":"310","severity":1,"message":"311","line":20,"column":4,"nodeType":"312","messageId":"309","endLine":20,"endColumn":8},{"ruleId":"285","severity":1,"message":"313","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"314","line":1,"column":27,"nodeType":"287","messageId":"288","endLine":1,"endColumn":36},{"ruleId":"285","severity":1,"message":"315","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":14},{"ruleId":"285","severity":1,"message":"316","line":2,"column":16,"nodeType":"287","messageId":"288","endLine":2,"endColumn":22},{"ruleId":"285","severity":1,"message":"317","line":2,"column":24,"nodeType":"287","messageId":"288","endLine":2,"endColumn":27},{"ruleId":"285","severity":1,"message":"318","line":2,"column":29,"nodeType":"287","messageId":"288","endLine":2,"endColumn":32},{"ruleId":"285","severity":1,"message":"319","line":2,"column":34,"nodeType":"287","messageId":"288","endLine":2,"endColumn":39},{"ruleId":"285","severity":1,"message":"320","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":15},{"ruleId":"285","severity":1,"message":"321","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":14},{"ruleId":"285","severity":1,"message":"322","line":7,"column":10,"nodeType":"287","messageId":"288","endLine":7,"endColumn":24},{"ruleId":"285","severity":1,"message":"323","line":7,"column":26,"nodeType":"287","messageId":"288","endLine":7,"endColumn":43},{"ruleId":"285","severity":1,"message":"324","line":8,"column":10,"nodeType":"287","messageId":"288","endLine":8,"endColumn":22},{"ruleId":"285","severity":1,"message":"325","line":9,"column":10,"nodeType":"287","messageId":"288","endLine":9,"endColumn":15},{"ruleId":"285","severity":1,"message":"326","line":14,"column":17,"nodeType":"287","messageId":"288","endLine":14,"endColumn":24},{"ruleId":"285","severity":1,"message":"327","line":15,"column":18,"nodeType":"287","messageId":"288","endLine":15,"endColumn":26},{"ruleId":"285","severity":1,"message":"328","line":16,"column":11,"nodeType":"287","messageId":"288","endLine":16,"endColumn":19},{"ruleId":"285","severity":1,"message":"329","line":16,"column":21,"nodeType":"287","messageId":"288","endLine":16,"endColumn":32},{"ruleId":"285","severity":1,"message":"330","line":17,"column":11,"nodeType":"287","messageId":"288","endLine":17,"endColumn":26},{"ruleId":"285","severity":1,"message":"331","line":17,"column":28,"nodeType":"287","messageId":"288","endLine":17,"endColumn":46},{"ruleId":"285","severity":1,"message":"332","line":18,"column":11,"nodeType":"287","messageId":"288","endLine":18,"endColumn":18},{"ruleId":"285","severity":1,"message":"293","line":18,"column":20,"nodeType":"287","messageId":"288","endLine":18,"endColumn":30},{"ruleId":"285","severity":1,"message":"333","line":20,"column":10,"nodeType":"287","messageId":"288","endLine":20,"endColumn":18},{"ruleId":"285","severity":1,"message":"303","line":23,"column":12,"nodeType":"287","messageId":"288","endLine":23,"endColumn":19},{"ruleId":"285","severity":1,"message":"304","line":23,"column":21,"nodeType":"287","messageId":"288","endLine":23,"endColumn":26},{"ruleId":"285","severity":1,"message":"334","line":23,"column":28,"nodeType":"287","messageId":"288","endLine":23,"endColumn":32},{"ruleId":"285","severity":1,"message":"335","line":26,"column":12,"nodeType":"287","messageId":"288","endLine":26,"endColumn":20},{"ruleId":"285","severity":1,"message":"336","line":29,"column":12,"nodeType":"287","messageId":"288","endLine":29,"endColumn":19},{"ruleId":"285","severity":1,"message":"337","line":32,"column":21,"nodeType":"287","messageId":"288","endLine":32,"endColumn":34},{"ruleId":"285","severity":1,"message":"338","line":32,"column":43,"nodeType":"287","messageId":"288","endLine":32,"endColumn":54},{"ruleId":"285","severity":1,"message":"339","line":32,"column":56,"nodeType":"287","messageId":"288","endLine":32,"endColumn":62},{"ruleId":"285","severity":1,"message":"335","line":10,"column":12,"nodeType":"287","messageId":"288","endLine":10,"endColumn":20},{"ruleId":"285","severity":1,"message":"340","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"303","line":20,"column":12,"nodeType":"287","messageId":"288","endLine":20,"endColumn":19},{"ruleId":"285","severity":1,"message":"304","line":20,"column":21,"nodeType":"287","messageId":"288","endLine":20,"endColumn":26},{"ruleId":"285","severity":1,"message":"338","line":23,"column":43,"nodeType":"287","messageId":"288","endLine":23,"endColumn":54},{"ruleId":"341","severity":1,"message":"342","line":60,"column":1,"nodeType":"343","messageId":"344","endLine":60,"endColumn":111},{"ruleId":"281","replacedBy":"345"},{"ruleId":"283","replacedBy":"346"},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["349"],"'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["351"],"'CART_CLEAR_ITEMS' is defined but never used.","'toast' is assigned a value but never used.",["347"],["348"],"'productId' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'ProductStock' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'icon'.","ObjectExpression","'img404' is defined but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'Loader' is defined but never used.","'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'listMyOrders' is defined but never used.","'toast' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'success' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","'useState' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["347"],["348"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [dispatch, orderId, order, successDeliver, userInfo, history]",{"range":"358","text":"359"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, history]",{"range":"362","text":"363"},[1512,1554],"[dispatch, orderId, order, successDeliver, userInfo, history]",[1608,1647],"[dispatch, match, product._id, successProductReview]",[1387,1425],"[dispatch, userId, user, successUpdate, history]"]
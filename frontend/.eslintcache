[{"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\App.jsx":"2","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\store.js":"3","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Header.jsx":"5","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ShippingScreen.jsx":"6","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\CartScreen.jsx":"7","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\LoginScreen.jsx":"8","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\RegisterScreen.jsx":"9","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PaymentScreen.jsx":"10","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"11","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderScreen.jsx":"12","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductListScreen.jsx":"13","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProfileScreens.jsx":"14","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductScreen.jsx":"15","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\HomeScreen.jsx":"16","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\userListScreen.jsx":"17","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductEditScreen.jsx":"18","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\UserEditScreen.jsx":"19","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderListScreen.jsx":"20","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\orderReducers.js":"21","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\productReducers.js":"22","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\cartReducer.js":"24","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\userAction.js":"25","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SearchBox.jsx":"26","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\orderAction.js":"27","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\cartActions.js":"28","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\productActions.js":"29","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Rating.js":"30","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\cartConstant.js":"31","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\productConstant.js":"32","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\userConstants.js":"33","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\orderConstant.js":"34","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\FormContainer.jsx":"35","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Message.jsx":"36","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Loader.jsx":"37","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\CheckoutSteps.jsx":"38","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Paginate.jsx":"39","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Meta.jsx":"40","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCarousel.jsx":"41","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Footer\\Footer.jsx":"42","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SwiperJs.jsx":"43","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCard\\ProductCard.jsx":"44","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\TitleComp\\Title.jsx":"45","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\NotFound.jsx":"46","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyacountScreen.jsx":"47","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyAcountScreen.jsx":"48","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyProfile.jsx":"49","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyDashboard.jsx":"50","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyOrders.jsx":"51","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\Order.jsx":"52","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\formatDate.js":"53","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Logo\\logo.jsx":"54","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\tooglerPassword.jsx":"55","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\generatePassword.js":"56","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\ScrollToTop.jsx":"57"},{"size":596,"mtime":1608064348994,"results":"58","hashOfConfig":"59"},{"size":3279,"mtime":1632172949834,"results":"60","hashOfConfig":"59"},{"size":2490,"mtime":1630941303337,"results":"61","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"59"},{"size":4380,"mtime":1633255099487,"results":"63","hashOfConfig":"59"},{"size":2598,"mtime":1608749591450,"results":"64","hashOfConfig":"59"},{"size":7873,"mtime":1630911763959,"results":"65","hashOfConfig":"59"},{"size":3078,"mtime":1631272561553,"results":"66","hashOfConfig":"59"},{"size":4513,"mtime":1631268283072,"results":"67","hashOfConfig":"59"},{"size":1841,"mtime":1630950243554,"results":"68","hashOfConfig":"59"},{"size":5806,"mtime":1631271473044,"results":"69","hashOfConfig":"59"},{"size":11498,"mtime":1631271516988,"results":"70","hashOfConfig":"59"},{"size":5779,"mtime":1633253653727,"results":"71","hashOfConfig":"59"},{"size":6968,"mtime":1630958954310,"results":"72","hashOfConfig":"59"},{"size":8630,"mtime":1632258381750,"results":"73","hashOfConfig":"59"},{"size":3493,"mtime":1633533651914,"results":"74","hashOfConfig":"59"},{"size":4677,"mtime":1633254722199,"results":"75","hashOfConfig":"59"},{"size":6287,"mtime":1630968995761,"results":"76","hashOfConfig":"59"},{"size":3217,"mtime":1630966796490,"results":"77","hashOfConfig":"59"},{"size":2425,"mtime":1631312956590,"results":"78","hashOfConfig":"59"},{"size":3851,"mtime":1630941358022,"results":"79","hashOfConfig":"59"},{"size":4295,"mtime":1630870257909,"results":"80","hashOfConfig":"59"},{"size":3879,"mtime":1609076002446,"results":"81","hashOfConfig":"59"},{"size":1343,"mtime":1631105962163,"results":"82","hashOfConfig":"59"},{"size":7043,"mtime":1630873878298,"results":"83","hashOfConfig":"59"},{"size":881,"mtime":1630870257864,"results":"84","hashOfConfig":"59"},{"size":6549,"mtime":1631314583422,"results":"85","hashOfConfig":"59"},{"size":1267,"mtime":1631009502867,"results":"86","hashOfConfig":"59"},{"size":6708,"mtime":1630969446350,"results":"87","hashOfConfig":"59"},{"size":1872,"mtime":1630870257856,"results":"88","hashOfConfig":"59"},{"size":282,"mtime":1608588756419,"results":"89","hashOfConfig":"59"},{"size":1696,"mtime":1630870257883,"results":"90","hashOfConfig":"59"},{"size":1506,"mtime":1608663841393,"results":"91","hashOfConfig":"59"},{"size":1266,"mtime":1608845316077,"results":"92","hashOfConfig":"59"},{"size":397,"mtime":1608666169136,"results":"93","hashOfConfig":"59"},{"size":364,"mtime":1631000307618,"results":"94","hashOfConfig":"59"},{"size":355,"mtime":1630915152628,"results":"95","hashOfConfig":"59"},{"size":1409,"mtime":1631271771527,"results":"96","hashOfConfig":"59"},{"size":812,"mtime":1630870257829,"results":"97","hashOfConfig":"59"},{"size":524,"mtime":1631092726124,"results":"98","hashOfConfig":"59"},{"size":1581,"mtime":1631266341395,"results":"99","hashOfConfig":"59"},{"size":3666,"mtime":1631269590658,"results":"100","hashOfConfig":"59"},{"size":1085,"mtime":1627160694862,"results":"101","hashOfConfig":"59"},{"size":3322,"mtime":1630915585748,"results":"102","hashOfConfig":"59"},{"size":639,"mtime":1630921597916,"results":"103","hashOfConfig":"59"},{"size":979,"mtime":1630870258009,"results":"104","hashOfConfig":"59"},{"size":632,"mtime":1627833641771,"results":"105","hashOfConfig":"59"},{"size":3336,"mtime":1633257778328,"results":"106","hashOfConfig":"59"},{"size":7195,"mtime":1631315987017,"results":"107","hashOfConfig":"59"},{"size":3840,"mtime":1631095076579,"results":"108","hashOfConfig":"59"},{"size":3053,"mtime":1631315881714,"results":"109","hashOfConfig":"59"},{"size":1775,"mtime":1631105809743,"results":"110","hashOfConfig":"59"},{"size":282,"mtime":1631001561180,"results":"111","hashOfConfig":"59"},{"size":332,"mtime":1631024846708,"results":"112","hashOfConfig":"59"},{"size":272,"mtime":1631184570848,"results":"113","hashOfConfig":"59"},{"size":296,"mtime":1631203836843,"results":"114","hashOfConfig":"59"},{"size":256,"mtime":1632172802406,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1ae4yog",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\index.js",[],["249","250"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\App.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\store.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Header.jsx",["251"],"import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userAction'\r\nimport logo from '../assests/img/logo.png'\r\nimport Logo from './Logo/logo'\r\n\r\nconst Header = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n\r\n\r\n  const logoutHandler = () => [\r\n    dispatch(logout())\r\n  ]\r\n  return (\r\n    <header >\r\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect className='fixed-top' style={{ marginBottom: '20px' }}>\r\n        <Container>\r\n          <LinkContainer to='/' style={{ fontSize: '1.5rem' }} >\r\n            <Navbar.Brand >\r\n              {/* <img src={logo} alt=\"\" style={{width:'200px'}} /><i className='fab fa-typo3 header-brand-icon' /> */}\r\n              <Logo />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link className='text-sm text-light'>\r\n                  <span className='header-cart-icon'>\r\n                    <i className=\"fas fa-shopping-cart text-sm\"></i>\r\n                  </span>\r\n                  <span className='badge header-cart-icon-value text-light'>\r\n                    {cartItems.reduce((acc, item) => acc + item.qty, 0)}\r\n                  </span>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username' className='text-sm text-light'>\r\n\r\n                  <LinkContainer to='/account/profile'>\r\n                    <NavDropdown.Item>My Account</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  {/* need to be edited */}\r\n                  {\r\n                    userInfo && !userInfo.isAdmin &&\r\n                    <LinkContainer to='/account/orders'>\r\n                      <NavDropdown.Item>My order</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                  }\r\n\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <>\r\n                      <LinkContainer to='/admin/userlist'>\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/productlist'>\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/orderlist'>\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </>\r\n\r\n                  )}\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {/* \r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin Panel' id='adminmenu'>\r\n\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                </NavDropdown>\r\n              )} */}\r\n\r\n\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\CartScreen.jsx",["252","253"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport NotFound from './NotFound'\r\nimport img from '../assests/img/cartEmpty.png'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n\r\n  return (\r\n    <Row>\r\n      {\r\n        cartItems.length === 0 ? (\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"error-section ptb-50\">\r\n              <div>\r\n                <img src={img} alt=\"\" style={{width:'45%', height:'35%'}} />\r\n              </div>\r\n              <div className=\"error-section-head\"><h2>Your cart is currently empty.</h2></div>\r\n              <div className=\"error-section-details\">\r\n                <p>\r\n                  Before proceed to checkout you must add some products to your shopping cart.\r\n                  You will find a lot of interesting products on our \"Shop\" page.\r\n                </p>\r\n              </div>\r\n              <div className=\"error-section-button\">\r\n                <Link to='/'>\r\n                  <button className=\"button btn-primary\">Continue Shopping</button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Col md={8}>\r\n              <h1>Shopping Cart</h1>\r\n              <ListGroup variant='flush'>\r\n                {cartItems.map((item) => (\r\n                  <ListGroup.Item key={item.product}>\r\n                    <Row>\r\n                      <Col md={2}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={2}><span className='tk'>৳</span>{item.price}</Col>\r\n                      <Col md={2}>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={item.qty}\r\n                          onChange={(e) =>\r\n                            dispatch(\r\n                              addToCart(item.product, Number(e.target.value))\r\n                            )\r\n                          }\r\n                        >\r\n                          {[...Array(item.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col md={2}>\r\n                        <Button\r\n                          type='button'\r\n                          variant='light'\r\n                          onClick={() => removeFromCartHandler(item.product)}\r\n                        >\r\n                          <i className='fas fa-trash'></i>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n              )\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>\r\n                      Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                      items\r\n                    </h2>\r\n                    <span className='tk'>৳</span>\r\n                    {cartItems\r\n                      .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                      .toFixed(2)}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn-block'\r\n                      disabled={cartItems.length === 0}\r\n                      onClick={checkoutHandler}\r\n                    >\r\n                      Proceed To Checkout\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </>\r\n        )\r\n      }\r\n\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <Row>\r\n//       <Col md={8}>\r\n//         <h1>Shopping Cart</h1>\r\n//         {cartItems.length === 0 ? (\r\n//           <Message>\r\n//             Your cart is empty <Link to='/'>Go Back</Link>\r\n//           </Message>\r\n//         ) : (\r\n//           <ListGroup variant='flush'>\r\n//             {cartItems.map((item) => (\r\n//               <ListGroup.Item key={item.product}>\r\n//                 <Row>\r\n//                   <Col md={2}>\r\n//                     <Image src={item.image} alt={item.name} fluid rounded />\r\n//                   </Col>\r\n//                   <Col md={3}>\r\n//                     <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n//                   </Col>\r\n//                   <Col md={2}><span className='tk'>৳</span>{item.price}</Col>\r\n//                   <Col md={2}>\r\n//                     <Form.Control\r\n//                       as='select'\r\n//                       value={item.qty}\r\n//                       onChange={(e) =>\r\n//                         dispatch(\r\n//                           addToCart(item.product, Number(e.target.value))\r\n//                         )\r\n//                       }\r\n//                     >\r\n//                       {[...Array(item.countInStock).keys()].map((x) => (\r\n//                         <option key={x + 1} value={x + 1}>\r\n//                           {x + 1}\r\n//                         </option>\r\n//                       ))}\r\n//                     </Form.Control>\r\n//                   </Col>\r\n//                   <Col md={2}>\r\n//                     <Button\r\n//                       type='button'\r\n//                       variant='light'\r\n//                       onClick={() => removeFromCartHandler(item.product)}\r\n//                     >\r\n//                       <i className='fas fa-trash'></i>\r\n//                     </Button>\r\n//                   </Col>\r\n//                 </Row>\r\n//               </ListGroup.Item>\r\n//             ))}\r\n//           </ListGroup>\r\n//         )}\r\n//       </Col>\r\n//       <Col md={4}>\r\n//         <Card>\r\n//           <ListGroup variant='flush'>\r\n//             <ListGroup.Item>\r\n//               <h2>\r\n//                 Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n//                 items\r\n//               </h2>\r\n//               <span className='tk'>৳</span>\r\n//               {cartItems\r\n//                 .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n//                 .toFixed(2)}\r\n//             </ListGroup.Item>\r\n//             <ListGroup.Item>\r\n//               <Button\r\n//                 type='button'\r\n//                 className='btn-block'\r\n//                 disabled={cartItems.length === 0}\r\n//                 onClick={checkoutHandler}\r\n//               >\r\n//                 Proceed To Checkout\r\n//               </Button>\r\n//             </ListGroup.Item>\r\n//           </ListGroup>\r\n//         </Card>\r\n//       </Col>\r\n//     </Row>","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderScreen.jsx",["254","255"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, deliverOrder, payOrder } from '../actions/orderAction'\r\nimport { ORDER_DELIVER_RESET } from '../constants/orderConstant'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstant'\r\nimport { formatDate } from '../utils/formatDate'\r\nimport { toast } from 'react-toastify';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderId = match.params.id\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n\r\n        if (!order || successDeliver || successPay || order._id !== orderId) {\r\n\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            }\r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n\r\n    }, [dispatch, orderId, order, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n\r\n        if (order.paymentMethod === 'PayPal') {\r\n            if (order.isPaid) {\r\n                dispatch(deliverOrder(order))\r\n            } else {\r\n                toast.info('Customer needs to pay!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2500,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: false,\r\n                    pauseOnHover: false,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } else {\r\n            dispatch(deliverOrder(order))\r\n        }\r\n        // console.log(order)\r\n    }\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n            <>\r\n                <h1>Order ID: {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush' >\r\n                            <ListGroup.Item className='shadow mb-2 rounded'>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name: </strong>{order.user.name}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Email: </strong>{order.user.email}\r\n                                </p>\r\n\r\n                                <p>\r\n                                    <strong>Address:</strong>\r\n                                    {order.shippingAddress.address},\r\n                                    {order.shippingAddress.city}{' '}\r\n                                    {order.shippingAddress.postalCode},\r\n                                    {' '}\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? (\r\n                                    <Message style={{ background: '#38b449' }}>Delivered On  <strong>{formatDate(order.deliveredAt)}</strong></Message>\r\n                                ) : (\r\n                                    <Message variant='danger'>Not delivered</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className='shadow mb-2 rounded'>\r\n                                <h2>Payment Method</h2>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                                {order.isPaid ? (\r\n                                    <Message style={{ background: '#38b449'}} className='shadow-sm'>Paid on <strong>{formatDate(order.paidAt)}</strong></Message>\r\n                                ) : (\r\n                                    <Message variant='danger'>Not Paid</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ? (\r\n                                    <Message>Order is empty</Message>\r\n                                ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index} className='shadow-sm mb-2 rounded'>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            src={item.image}\r\n                                                            alt={item.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x <span className='tk'>৳</span>{item.price} = <span className='tk'>৳</span>{item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card className='shadow mb-2 rounded'>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col><span className='tk'>৳</span> {order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {!order.isPaid && !userInfo.isAdmin && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader />}\r\n                                        {/* {!sdkReady ? (\r\n                                            <Loader />\r\n                                        ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                        )} */}\r\n\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler} style={{ fontSize: '16px' }}>\r\n                                            Mark as Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductListScreen.jsx",["256"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstant'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <Col md={12}>\r\n\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          {/* <Table striped bordered hover responsive className='table-sm '>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name.slice(0,20)+ ' . .'}</td>\r\n                  <td><span className='tk'>৳</span>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table> */}\r\n          {\r\n            products.map(product => (\r\n              <Row className='shadow-sm mb-3 rounded ' style={{ background: '#fff' }}>\r\n                <Col style={{ maxWidth: '115px', minWidth: \"115px\" }} xl={6}>\r\n                  <Image\r\n                    src={product.image}\r\n                    alt={product.name}\r\n                    fluid\r\n                    rounded\r\n                  />\r\n                </Col>\r\n                <Col  className='product-center'>\r\n                  {/* <Link to={`/product/${product.product}`}> */}\r\n                  <p>{product.name}</p>\r\n                  {/* </Link> */}\r\n                </Col>\r\n                <Col>\r\n                  {product.price}\r\n                </Col>\r\n                <Col>\r\n                  Category:{product.category}\r\n                </Col>\r\n                <Col>\r\n                  Brand: {product.brand}\r\n                </Col>\r\n                <Col style={{ justifyContent: 'center' }}>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            ))\r\n          }\r\n\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProfileScreens.jsx",["257","258","259","260","261","262","263"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport { listMyOrders } from '../actions/orderAction'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ProfileScreens = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (password !== confirmPassword) {\r\n            // setMessage('Passwords do not match')\r\n            toast.error('Passwords do not match', {\r\n                position: \"top-left\",\r\n                autoClose: 1500,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n\r\n            });\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n            toast.success('Profile updated 🦄', {\r\n                position: \"top-left\",\r\n                \r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col md={5} >\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            {/* <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead className='text-center'>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fa fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n\r\n            </Col> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileScreens","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductScreen.jsx",["264","265"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstant'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const productId = match.params.id\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    // history.push(`/cart/${productId}?qty=${qty}`)\r\n    dispatch(addToCart(productId, qty))\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-primary my-3' to='/'>\r\n        <i className=\"fas fa-angle-left font-size-16\"></i> Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: <span className='tk'>৳</span>{product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong><span className='tk'>৳</span>{product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <div className='ml-3 mt-3'>\r\n                <h4>Ratings & Reviews of {product.name}</h4>\r\n              </div>\r\n\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  {userInfo && !userInfo.isAdmin ? \"admin\" :\r\n                    <>\r\n                      <h2>Write a Customer Review</h2>\r\n                      {successProductReview &&\r\n                        <Message variant='success'>\r\n                          Reviewed successfully\r\n                        </Message>\r\n                      }\r\n                      {loadingProductReview && <Loader />}\r\n                      {errorProductReview && (\r\n                        <Message variant='danger'>{errorProductReview}</Message>\r\n                      )}\r\n\r\n                      {/* {userInfo && !userInfo.isAdmin ? (\r\n                      <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='rating'>\r\n                          <Form.Label>Rating</Form.Label>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={rating}\r\n                            onChange={(e) => setRating(e.target.value)}\r\n                          >\r\n                            <option value=''>Select...</option>\r\n                            <option value='1'>* - Poor</option>\r\n                            <option value='2'>** - Fair</option>\r\n                            <option value='3'>*** - Good</option>\r\n                            <option value='4'>**** - Very Good</option>\r\n                            <option value='5'>***** - Excellent</option>\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='comment'>\r\n                          <Form.Label>Comment</Form.Label>\r\n                          <Form.Control\r\n                            as='textarea'\r\n                            row='3'\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                          ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button\r\n                          disabled={loadingProductReview}\r\n                          type='submit'\r\n                          variant='primary'\r\n                        >\r\n                          Review\r\n                        </Button>\r\n                      </Form>\r\n                    ) : (\r\n                      <Message>\r\n                        Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                      </Message>\r\n                    ) */}\r\n                    </>\r\n                  }\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\HomeScreen.jsx",["266","267","268"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\userListScreen.jsx",["269","270","271","272","273","274","275","276"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userAction'\r\nimport { toast } from 'react-toastify'\r\nimport Title from '../components/TitleComp/Title'\r\n\r\n\r\n\r\n\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const [admins, setAdmins] = useState([])\r\n  const [customer, setCustomer] = useState([])\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n      if (userList.length !== 0) {\r\n        const admins = users.filter(user => user.isAdmin == true)\r\n        const customer = users.filter(user => user.isAdmin !== true)\r\n        setAdmins(admins)\r\n        setCustomer(customer)\r\n      }\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className='m-3'>Admins And Usesr List</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        users.map(user => (\r\n\r\n          <Row md={12} xl={9} className='shadow-sm mb-3 rounded product-center ' style={{ background: '#fff', cursor: 'pointer' }}>\r\n            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n              <Col style={{ fontWeight: 700 }}>\r\n                <p>{user._id}</p>\r\n              </Col>\r\n            </LinkContainer>\r\n            <Col >\r\n              <p>{user.name}</p>\r\n            </Col>\r\n            <Col>\r\n              <p>{user.isAdmin ? 'ADMIN' : 'USER'}</p>\r\n            </Col>\r\n            <Col>\r\n              <p>{user.email}</p>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                variant='danger'\r\n                className='btn-sm'\r\n                onClick={() => deleteHandler(user._id)}\r\n                style={{ marginLeft: '10px' }}\r\n              >\r\n                <i className='fas fa-trash'></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n        ))\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* {\r\n            users && <Table  bordered hover responsive className='table-sm' >\r\n              <thead>\r\n                <tr className='text-center'>\r\n                  <th>ID</th>\r\n                  <th>NAME</th>\r\n                  <th>EMAIL</th>\r\n                  <th>ADMIN</th>\r\n                  <th >ACTION</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user._id} className={`${user.isAdmin && 'table-info'}`}>\r\n                    <td>{user._id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>\r\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                    </td>\r\n                    <td className='text-center'>\r\n                      {user.isAdmin ? (\r\n                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                      ) : (\r\n                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                      )}\r\n                    </td>\r\n                    <td className='text-center'>\r\n                      <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                        <Button variant='primary' className='btn-sm'>\r\n                          <i class=\"fas fa-user-edit\"></i>\r\n                        </Button>\r\n                      </LinkContainer>\r\n                      <Button\r\n                        variant='danger'\r\n                        className='btn-sm'\r\n                        onClick={() => deleteHandler(user._id)}\r\n                        style={{ marginLeft: '10px' }}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          } */}","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\ProductEditScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\UserEditScreen.jsx",["277"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch,userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-primary my-3' >\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\OrderListScreen.jsx",["278"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderAction'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n\r\n  }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead className='text-center'>\r\n            <tr >\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id} className='text-center'>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td><span className='tk'>৳</span>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td className='text-center'>\r\n                  <LinkContainer to={`/orders/${order._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\reducers\\cartReducer.js",["279"],"import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstant\";\r\n\r\nconst toast=''\r\n\r\nexport const cartReducer = (\r\n  state = {\r\n    cartItems: [],\r\n    shippingAddress: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n      case CART_CLEAR_ITEMS:\r\n        return {\r\n          ...state,\r\n          cartItems: [],\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SearchBox.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\productConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\constants\\orderConstant.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\FormContainer.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Message.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Loader.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\CheckoutSteps.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Paginate.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Meta.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCarousel.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\SwiperJs.jsx",[],["280","281"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\ProductCard\\ProductCard.jsx",["282","283","284","285","286","287","288"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Rating from \"../Rating\";\r\nimport \"./ProductCard.css\";\r\nimport { addToCart } from '../../actions/cartActions'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst Product = ({ product }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const productId = product._id\r\n  const dispatch = useDispatch()\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product: ProductStock } = productDetails\r\n\r\n  const addToCartHandler = (e, id) => {\r\n    e.preventDefault()\r\n    setQty(qty + 1)\r\n    dispatch(addToCart(id, qty))\r\n    toast.success('Item Added to cart', {\r\n      position: \"bottom-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: false,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: false,\r\n      autoClose: 3000,\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <Card\r\n      className=\"my-2\"\r\n      style={{ width: \"180px\", height: \"322px\" }}\r\n    >\r\n     \r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img className=\"product-img img-fluid\" src={product.image} variant=\"top\" />\r\n      </Link>\r\n      <Card.Body className=\"p-2\">\r\n        <Card.Title as=\"div\" className=\"card-title text-sm\">\r\n          <span style={{ display: \"block\", wordBreak: 'break-all' }}>\r\n            {\r\n              product.name.length > 45 ? `${product.name.substring(0, 45)}...` : product.name\r\n            }\r\n          </span>\r\n        </Card.Title>\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={` (${product.numReviews})`}\r\n            color=\"rgba(45,55,72,1)\"\r\n          />\r\n        </Card.Text>\r\n        <div className='price-cart-icon-wrapper'>\r\n          <Card.Text as=\"h3\" style={{ fontSize: \"18px\" }} className=' product-price'>\r\n            &#2547;{product.price}\r\n          </Card.Text>\r\n          {/* <Card.Text as=\"div\" style={{ fontSize: \"18px\", display: 'inline-block', float: 'right' }}>\r\n              cart\r\n            </Card.Text> */}\r\n          <button className='btn add-to-cart-button' onClick={(e) => addToCartHandler(e, product._id)} disabled={product.countInStock == 0}>\r\n            <i class=\"fas fa-cart-plus\"></i>        {/*  add to cart ico */}\r\n          </button>\r\n        </div>\r\n\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n\r\n// <Card className=\"my-2\" style={{ width: \"180px\", height: \"325px\" }} card-hover>\r\n//       <Link to={`/product/${product._id}`}>\r\n//         <Card.Img className=\"product-img\" src={product.image} variant=\"top\" />\r\n//       </Link>\r\n//       <Card.Body className='p-2'>\r\n//         <Link to={`/product/${product._id}`}>\r\n//           <Card.Title as=\"div\" className='card-title text-sm'>\r\n//             <span>{product.name.substring(0, 15)}</span>\r\n//           </Card.Title>\r\n//         </Link>\r\n//         <Card.Text as=\"div\">\r\n//           <Rating value={product.rating} text={` (${product.numReviews})`} />\r\n//         </Card.Text>\r\n//         <Card.Text as=\"h3\" style={{ fontSize: \"18px\" }}>\r\n//           &#2547;{product.price}\r\n//         </Card.Text>\r\n//       </Card.Body>\r\n//     </Card>\r\n",["289","290"],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\TitleComp\\Title.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\NotFound.jsx",["291"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport img404 from '../assests/img/404.jpg'\r\n\r\n\r\nconst NotFound = ({img}) => {\r\n   return (\r\n      <>\r\n         <div class=\"col-lg-12\">\r\n            <div class=\"error-section ptb-50\">\r\n               <div class=\"error-section-head\"><h1>404</h1></div>\r\n               <div class=\"error-section-subhead\"><h4>PAGE NOT FOUND</h4></div>\r\n               <div class=\"error-section-details\">\r\n                  <p>\r\n                     Sorry but the page you are looking for does not exist, have been removed, name changed or is temporarity unavailable.\r\n                  </p>\r\n               </div>\r\n               <div class=\"error-section-button\">\r\n                  <Link to='/'>\r\n                     <button className=\"button btn-primary\">Back to home page</button>\r\n                  </Link>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default NotFound\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyacountScreen.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\screens\\MyAcountScreen.jsx",["292"],"import React from 'react'\r\nimport { Row, Col, Container, Nav, Navbar } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Dashboard from '../components/MyAccountComp/MyDashboard'\r\nimport MyProfile from '../components/MyAccountComp/MyProfile'\r\nimport MyOrders from '../components/MyAccountComp/MyOrders'\r\nimport Title from '../components/TitleComp/Title'\r\n\r\nconst MyCoountScreen = ({ location, match }) => {\r\n\r\n   const pathName = location.pathname\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   return (\r\n      <section className='user-account mt-4 mb-3'>\r\n         <Container>\r\n            <div className=\"user-account-title\">\r\n               <Row>\r\n                  <Col>\r\n                     <Title text='My Account' className='page-heading' />\r\n                  </Col>\r\n               </Row>\r\n            </div>\r\n            <div className=\"user-account-content\">\r\n               <Row>\r\n                  <Col md={3} >\r\n                     <div className='user-account-content-sidebar'>\r\n                        <Navbar className='justify-content-center'>\r\n                           <Nav className=\"flex-column text-center\">\r\n                              {\r\n                                 !userInfo.isAdmin &&\r\n                                 <LinkContainer to=\"/account\" exact as='div' activeClassName='bg-warning text-light shadow'>\r\n                                    <Nav.Link><i className=\"fas fa-vector-square\"></i>  DASHBOARD</Nav.Link>\r\n                                 </LinkContainer>\r\n                              }\r\n\r\n                              <LinkContainer to=\"/account/profile\" activeClassName='bg-warning text-white shadow'>\r\n                                 <Nav.Link ><i className=\"far fa-user\"></i>  My Profile</Nav.Link>\r\n                              </LinkContainer>\r\n\r\n                              {\r\n                                 !userInfo.isAdmin &&\r\n                                 <LinkContainer to=\"/account/orders\" activeClassName='bg-warning text-white shadow'>\r\n                                    <Nav.Link ><i className=\"far fa-file-alt\"></i> Orders History</Nav.Link>\r\n                                 </LinkContainer>\r\n                              }\r\n                           </Nav>\r\n                        </Navbar>\r\n                     </div>\r\n                  </Col>\r\n                  {\r\n                     pathName === '/account' ? <Route path=\"/account\" render={() => <Dashboard />} /> :\r\n                        pathName === '/account/profile' ? <Route path=\"/account/profile\" render={() => <MyProfile />} /> :\r\n                           pathName === '/account/orders' ? <Route path=\"/account/orders\" render={() => <MyOrders />} /> :\r\n                              ''\r\n                  }\r\n                  {/* <Route path={'/account'} render={() => <Dashboard />} />\r\n                  <Route path={`${match.path}/profile`} render={() => <MyProfile />} />\r\n                  <Route path={`${match.path}/orders`} component={MyOrders} /> */}\r\n               </Row>\r\n            </div>\r\n         </Container>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default MyCoountScreen\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyProfile.jsx",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../../actions/userAction'\r\nimport { listMyOrders } from '../../actions/orderAction'\r\nimport { toast } from 'react-toastify'\r\nimport Title from '../TitleComp/Title'\r\n\r\nconst MyProfile = ({ history }) => {\r\n\r\n   const [name, setName] = useState('')\r\n   const [email, setEmail] = useState('')\r\n   const [password, setPassword] = useState('')\r\n   const [confirmPassword, setConfirmPassword] = useState('')\r\n   const [message, setMessage] = useState(null)\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { loading, error, user } = userDetails\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n   const { name: newName } = userInfo\r\n\r\n   const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n   const { success } = userUpdateProfile\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy)\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n\r\n   useEffect(() => {\r\n      if (!userInfo) {\r\n         history.push('/login')\r\n      } else {\r\n         if (!user.name) {\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders())\r\n         } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n         }\r\n        \r\n      }\r\n   }, [dispatch, history, userInfo, user, newName])\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (password !== confirmPassword) {\r\n         // setMessage('Passwords do not match')\r\n         toast.error('Passwords do not match', {\r\n            position: \"top-left\",\r\n            autoClose: 1500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n\r\n         });\r\n      } else {\r\n         dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n         toast.success('Profile updated 🦄', {\r\n            position: \"top-left\",\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n         });\r\n         setEmail('')\r\n      }\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   return (\r\n      <div className=\"col-md-9\">\r\n         <div className=\"user-account-content-tab\">\r\n            <div className=\"card\">\r\n               <div className=\"card-header\">\r\n                  <Title text='Basic Info' />\r\n               </div>\r\n               <div className=\"card-body\">\r\n                  <form onSubmit={submitHandler}>\r\n                     <input\r\n                        type=\"hidden\"\r\n                        name=\"_token\"\r\n                        value=\"GS0rjD2kz7v6wPZHBMOooa01GoRWlNstHxKQnTdU\"\r\n                     />\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Your Name</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Your Name\"\r\n                              name=\"name\" value={name}\r\n                              required=\"\"\r\n                              value={name}\r\n                              onChange={(e) => setName(e.target.value)}\r\n                           />\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">New Email</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              placeholder='New email here '\r\n                              name=\"email\"\r\n                              value={email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                           />\r\n                        </div>\r\n                     </div>\r\n                     {/* profile photo */}\r\n                     {/* <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Photo</label>\r\n                        <div className=\"col-md-10\">\r\n                           <div className=\"input-group\" data-toggle=\"aizuploader\" data-type=\"image\">\r\n                              <div className=\"input-group-prepend\">\r\n                                 <div className=\"input-group-text bg-soft-secondary font-weight-medium\">Browse</div>\r\n                              </div>\r\n                              <div className=\"form-control file-amount\">Choose file</div>\r\n                              <input type=\"hidden\" name=\"photo\" value=\"\" className=\"selected-files\" />\r\n                           </div>\r\n                           <div className=\"file-preview box sm\"></div>\r\n                        </div>\r\n                     </div> */}\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Password</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"New Password\"\r\n                              name=\"new_password\"\r\n                              value={password}\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                           />\r\n                        </div>\r\n                     </div>\r\n                     <div className=\"form-group row\">\r\n                        <label className=\"col-md-2 col-form-label\">Confirm Password</label>\r\n                        <div className=\"col-md-10\">\r\n                           <input\r\n                              type=\"password\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Confirm Password\"\r\n                              name=\"confirm_password\"\r\n                              value={confirmPassword}\r\n                              onChange={(e) => setConfirmPassword(e.target.value)}\r\n                           />\r\n                        </div>\r\n                     </div>\r\n\r\n                     <div className=\"form-group mb-0 text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                           Update Profile\r\n                        </button>\r\n                     </div>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyProfile\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyDashboard.jsx",["310","311","312"],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Title from '../TitleComp/Title'\r\n\r\nconst Dashboard = () => {\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const cart = useSelector((state) => state.cart)\r\n   const { cartItems } = cart\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy)\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n   useEffect(() => {\r\n\r\n   }, [])\r\n\r\n   return (\r\n      <>\r\n         <div className=\"col-md-9\">\r\n            <div className=\"row\">\r\n               <div class=\"col-12\">\r\n                  <Title text='Dashboard' className='page-heading' />\r\n               </div>\r\n            </div>\r\n            <div className=\"row \">\r\n\r\n               <div className=\"col-md-4\">\r\n                  <div className=\"bg-grad-1 text-white rounded-lg mb-4 overflow-hidden\">\r\n                     <div className=\"px-3 pt-3\">\r\n                        <div className=\"h3 fw-700\">\r\n                           {cartItems && cartItems.reduce((acc, item) => acc + item.qty, 0)} Product\r\n                        </div>\r\n                        <div className=\"opacity-50\">in your cart</div>\r\n                     </div>\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path\r\n                           fill=\"rgba(255,255,255,0.3)\"\r\n                           fill-opacity=\"1\"\r\n                           d=\"M0,192L30,208C60,224,120,256,180,245.3C240,235,300,181,360,144C420,107,480,85,540,96C600,107,660,149,720,154.7C780,160,840,128,900,117.3C960,107,1020,117,1080,112C1140,107,1200,85,1260,74.7C1320,64,1380,64,1410,64L1440,64L1440,320L1410,320C1380,320,1320,320,1260,320C1200,320,1140,320,1080,320C1020,320,960,320,900,320C840,320,780,320,720,320C660,320,600,320,540,320C480,320,420,320,360,320C300,320,240,320,180,320C120,320,60,320,30,320L0,320Z\"\r\n                        ></path>\r\n                     </svg>\r\n                  </div>\r\n               </div>\r\n               <div className=\"col-md-4\">\r\n                  <div className=\"bg-grad-3 text-white rounded-lg mb-4 overflow-hidden\">\r\n                     <div className=\"px-3 pt-3\">\r\n                        <div className=\"h3 fw-700\"> Orders</div>\r\n                        <div className=\"opacity-50\">My Order {orders && orders.length}</div>\r\n                     </div>\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                        <path\r\n                           fill=\"rgba(255,255,255,0.3)\"\r\n                           fill-opacity=\"1\"\r\n                           d=\"M0,192L26.7,192C53.3,192,107,192,160,202.7C213.3,213,267,235,320,218.7C373.3,203,427,149,480,117.3C533.3,85,587,75,640,90.7C693.3,107,747,149,800,149.3C853.3,149,907,107,960,112C1013.3,117,1067,171,1120,202.7C1173.3,235,1227,245,1280,213.3C1333.3,181,1387,107,1413,69.3L1440,32L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z\"\r\n                        ></path>\r\n                     </svg>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div class=\"row gutters-10\">\r\n               <div class=\"col-md-9\">\r\n                  <div class=\"card\">\r\n                     <div class=\"card-header\">\r\n                        <h6 class=\"mb-0\">Default Shipping Address</h6>\r\n                     </div>\r\n                     <div class=\"card-body\"></div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\MyOrders.jsx",["313","314","315","316","317","318","319"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../../actions/userAction'\r\nimport { listMyOrders } from '../../actions/orderAction'\r\nimport Title from '../TitleComp/Title'\r\nimport Order from './Order'\r\nimport Loader from '../Loader'\r\nimport './MyOrders.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Form,Badge } from 'react-bootstrap'\r\n\r\nconst MyProfile = ({ match }) => {\r\n\r\n   const [orderFilter, setOrderFilter] = useState('all')\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { loading, error, user } = userDetails\r\n\r\n   const orderListMy = useSelector((state) => state.orderListMy)\r\n   const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n   const orderPay = useSelector((state) => state.orderPay)\r\n   const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n\r\n\r\n   useEffect(() => {\r\n\r\n      if (!userInfo) {\r\n         //  history.push('/login')\r\n      } else {\r\n         if (!user.name) {\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listMyOrders(orderFilter))\r\n         }\r\n         dispatch(listMyOrders(orderFilter))\r\n      }\r\n   }, [dispatch, userInfo, user, successPay, orderFilter])\r\n\r\n   const handleSelect = (e) => {\r\n      setOrderFilter(e.target.value)\r\n   }\r\n   return (\r\n      <div className=\"col-md-9 \">\r\n         <Title text='Order History' className=\"small-title\" />\r\n         <div className='d-flex justify-content-between'>\r\n            <>\r\n               <h5>Total Order: <Badge className='btn-primary'>{orders && orders.length}</Badge></h5>\r\n               <select\r\n                  value={orderFilter}\r\n                  onChange={handleSelect}\r\n                  className='form-select rounded btn-primary py-2'\r\n               >\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"processing\">Processing</option>\r\n                  <option value=\"delivered\">Delivered</option>\r\n                  <option value=\"paid\">Paid</option>\r\n                  <option value=\"unpaid\">Unpaid</option>\r\n               </select>\r\n            </>\r\n         </div>\r\n\r\n         <div className=\"user-account-content-tab p-0 \">\r\n            <div class=\"row mt-2\">\r\n               <div class=\"col-lg-12\">\r\n                  {\r\n                     loadingOrders ? <Loader /> :\r\n\r\n                        (orders.map(order => (\r\n                           <Link to={`/orders/${order._id}`}>\r\n                              <Order key={order._id} order={order} />\r\n                           </Link>\r\n\r\n                        )))\r\n                  }\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n{/* <h2 style={{ textAlign: \"center\", marginTop: \"20px\" }} className='text-warning'>No orders found</h2>: */ }\r\nexport default MyProfile\r\n","C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\MyAccountComp\\Order.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\formatDate.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\Logo\\logo.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\components\\tooglerPassword.jsx",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\generatePassword.js",[],"C:\\Users\\pc\\Desktop\\sidshop\\frontend\\src\\utils\\ScrollToTop.jsx",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":8,"column":8,"nodeType":"326","messageId":"327","endLine":8,"endColumn":12},{"ruleId":"324","severity":1,"message":"328","line":5,"column":8,"nodeType":"326","messageId":"327","endLine":5,"endColumn":15},{"ruleId":"324","severity":1,"message":"329","line":7,"column":8,"nodeType":"326","messageId":"327","endLine":7,"endColumn":16},{"ruleId":"324","severity":1,"message":"330","line":17,"column":12,"nodeType":"326","messageId":"327","endLine":17,"endColumn":20},{"ruleId":"331","severity":1,"message":"332","line":80,"column":8,"nodeType":"333","endLine":80,"endColumn":62,"suggestions":"334"},{"ruleId":"324","severity":1,"message":"335","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":15},{"ruleId":"324","severity":1,"message":"336","line":2,"column":24,"nodeType":"326","messageId":"327","endLine":2,"endColumn":27},{"ruleId":"324","severity":1,"message":"335","line":2,"column":34,"nodeType":"326","messageId":"327","endLine":2,"endColumn":39},{"ruleId":"324","severity":1,"message":"337","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":23},{"ruleId":"324","severity":1,"message":"338","line":16,"column":21,"nodeType":"326","messageId":"327","endLine":16,"endColumn":31},{"ruleId":"324","severity":1,"message":"339","line":30,"column":22,"nodeType":"326","messageId":"327","endLine":30,"endColumn":35},{"ruleId":"324","severity":1,"message":"340","line":30,"column":44,"nodeType":"326","messageId":"327","endLine":30,"endColumn":55},{"ruleId":"324","severity":1,"message":"341","line":30,"column":57,"nodeType":"326","messageId":"327","endLine":30,"endColumn":63},{"ruleId":"331","severity":1,"message":"342","line":47,"column":6,"nodeType":"333","endLine":47,"endColumn":45,"suggestions":"343"},{"ruleId":"324","severity":1,"message":"344","line":54,"column":9,"nodeType":"326","messageId":"327","endLine":54,"endColumn":22},{"ruleId":"324","severity":1,"message":"345","line":1,"column":28,"nodeType":"326","messageId":"327","endLine":1,"endColumn":32},{"ruleId":"324","severity":1,"message":"346","line":13,"column":8,"nodeType":"326","messageId":"327","endLine":13,"endColumn":22},{"ruleId":"331","severity":1,"message":"347","line":42,"column":8,"nodeType":"333","endLine":42,"endColumn":39,"suggestions":"348"},{"ruleId":"324","severity":1,"message":"335","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":15},{"ruleId":"324","severity":1,"message":"349","line":8,"column":10,"nodeType":"326","messageId":"327","endLine":8,"endColumn":15},{"ruleId":"324","severity":1,"message":"350","line":9,"column":8,"nodeType":"326","messageId":"327","endLine":9,"endColumn":13},{"ruleId":"324","severity":1,"message":"351","line":16,"column":10,"nodeType":"326","messageId":"327","endLine":16,"endColumn":16},{"ruleId":"324","severity":1,"message":"352","line":17,"column":10,"nodeType":"326","messageId":"327","endLine":17,"endColumn":18},{"ruleId":"353","severity":1,"message":"354","line":40,"column":58,"nodeType":"355","messageId":"356","endLine":40,"endColumn":60},{"ruleId":"331","severity":1,"message":"357","line":49,"column":6,"nodeType":"333","endLine":49,"endColumn":50,"suggestions":"358"},{"ruleId":"359","severity":1,"message":"360","line":111,"column":1,"nodeType":"361","messageId":"362","endLine":156,"endColumn":16},{"ruleId":"331","severity":1,"message":"363","line":43,"column":6,"nodeType":"333","endLine":43,"endColumn":44,"suggestions":"364"},{"ruleId":"324","severity":1,"message":"365","line":1,"column":28,"nodeType":"326","messageId":"327","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"366","line":9,"column":7,"nodeType":"326","messageId":"327","endLine":9,"endColumn":12},{"ruleId":"320","replacedBy":"367"},{"ruleId":"322","replacedBy":"368"},{"ruleId":"324","severity":1,"message":"369","line":8,"column":10,"nodeType":"326","messageId":"327","endLine":8,"endColumn":24},{"ruleId":"324","severity":1,"message":"370","line":12,"column":9,"nodeType":"326","messageId":"327","endLine":12,"endColumn":18},{"ruleId":"324","severity":1,"message":"371","line":15,"column":11,"nodeType":"326","messageId":"327","endLine":15,"endColumn":18},{"ruleId":"324","severity":1,"message":"372","line":15,"column":20,"nodeType":"326","messageId":"327","endLine":15,"endColumn":25},{"ruleId":"324","severity":1,"message":"373","line":15,"column":36,"nodeType":"326","messageId":"327","endLine":15,"endColumn":48},{"ruleId":"374","severity":1,"message":"375","line":29,"column":7,"nodeType":"376","messageId":"356","endLine":29,"endColumn":16},{"ruleId":"353","severity":1,"message":"354","line":65,"column":135,"nodeType":"355","messageId":"356","endLine":65,"endColumn":137},{"ruleId":"320","replacedBy":"377"},{"ruleId":"322","replacedBy":"378"},{"ruleId":"324","severity":1,"message":"379","line":3,"column":8,"nodeType":"326","messageId":"327","endLine":3,"endColumn":14},{"ruleId":"324","severity":1,"message":"380","line":5,"column":10,"nodeType":"326","messageId":"327","endLine":5,"endColumn":21},{"ruleId":"324","severity":1,"message":"381","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":14},{"ruleId":"324","severity":1,"message":"382","line":2,"column":16,"nodeType":"326","messageId":"327","endLine":2,"endColumn":22},{"ruleId":"324","severity":1,"message":"336","line":2,"column":24,"nodeType":"326","messageId":"327","endLine":2,"endColumn":27},{"ruleId":"324","severity":1,"message":"383","line":2,"column":29,"nodeType":"326","messageId":"327","endLine":2,"endColumn":32},{"ruleId":"324","severity":1,"message":"335","line":2,"column":34,"nodeType":"326","messageId":"327","endLine":2,"endColumn":39},{"ruleId":"324","severity":1,"message":"337","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":23},{"ruleId":"324","severity":1,"message":"328","line":5,"column":8,"nodeType":"326","messageId":"327","endLine":5,"endColumn":15},{"ruleId":"324","severity":1,"message":"384","line":6,"column":8,"nodeType":"326","messageId":"327","endLine":6,"endColumn":14},{"ruleId":"324","severity":1,"message":"385","line":18,"column":11,"nodeType":"326","messageId":"327","endLine":18,"endColumn":18},{"ruleId":"324","severity":1,"message":"338","line":18,"column":20,"nodeType":"326","messageId":"327","endLine":18,"endColumn":30},{"ruleId":"324","severity":1,"message":"371","line":23,"column":12,"nodeType":"326","messageId":"327","endLine":23,"endColumn":19},{"ruleId":"324","severity":1,"message":"372","line":23,"column":21,"nodeType":"326","messageId":"327","endLine":23,"endColumn":26},{"ruleId":"324","severity":1,"message":"386","line":30,"column":12,"nodeType":"326","messageId":"327","endLine":30,"endColumn":19},{"ruleId":"324","severity":1,"message":"339","line":33,"column":21,"nodeType":"326","messageId":"327","endLine":33,"endColumn":34},{"ruleId":"324","severity":1,"message":"340","line":33,"column":43,"nodeType":"326","messageId":"327","endLine":33,"endColumn":54},{"ruleId":"324","severity":1,"message":"341","line":33,"column":56,"nodeType":"326","messageId":"327","endLine":33,"endColumn":62},{"ruleId":"387","severity":1,"message":"388","line":110,"column":31,"nodeType":"389","endLine":110,"endColumn":43},{"ruleId":"324","severity":1,"message":"390","line":8,"column":12,"nodeType":"326","messageId":"327","endLine":8,"endColumn":20},{"ruleId":"324","severity":1,"message":"339","line":14,"column":21,"nodeType":"326","messageId":"327","endLine":14,"endColumn":34},{"ruleId":"324","severity":1,"message":"340","line":14,"column":43,"nodeType":"326","messageId":"327","endLine":14,"endColumn":54},{"ruleId":"324","severity":1,"message":"336","line":10,"column":10,"nodeType":"326","messageId":"327","endLine":10,"endColumn":13},{"ruleId":"324","severity":1,"message":"381","line":10,"column":15,"nodeType":"326","messageId":"327","endLine":10,"endColumn":19},{"ruleId":"324","severity":1,"message":"371","line":23,"column":12,"nodeType":"326","messageId":"327","endLine":23,"endColumn":19},{"ruleId":"324","severity":1,"message":"372","line":23,"column":21,"nodeType":"326","messageId":"327","endLine":23,"endColumn":26},{"ruleId":"324","severity":1,"message":"340","line":26,"column":43,"nodeType":"326","messageId":"327","endLine":26,"endColumn":54},{"ruleId":"324","severity":1,"message":"391","line":30,"column":21,"nodeType":"326","messageId":"327","endLine":30,"endColumn":31},{"ruleId":"359","severity":1,"message":"360","line":90,"column":1,"nodeType":"361","messageId":"362","endLine":90,"endColumn":111},"no-native-reassign",["392"],"no-negated-in-lhs",["393"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'NotFound' is defined but never used.","'sdkReady' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["394"],"'Table' is defined but never used.","'Row' is defined but never used.","'LinkContainer' is defined but never used.","'setMessage' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.",["395"],"'submitHandler' is assigned a value but never used.","'memo' is defined but never used.","'InfiniteScroll' is defined but never used.","React Hook useEffect has a missing dependency: 'myTopRatedProduct'. Either include it or remove the dependency array.",["396"],"'toast' is defined but never used.","'Title' is defined but never used.","'admins' is assigned a value but never used.","'customer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'userList.length' and 'users'. Either include them or remove the dependency array.",["397"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["398"],"'useState' is defined but never used.","'toast' is assigned a value but never used.",["392"],["393"],"'ToastContainer' is defined but never used.","'productId' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'ProductStock' is assigned a value but never used.","no-dupe-keys","Duplicate key 'autoClose'.","ObjectExpression",["392"],["393"],"'img404' is defined but never used.","'useDispatch' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Loader' is defined but never used.","'message' is assigned a value but never used.","'success' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'userInfo' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},"Update the dependencies array to be: [dispatch, orderId, order, successPay, successDeliver, userInfo, history]",{"range":"409","text":"410"},"Update the dependencies array to be: [dispatch, match, product._id, successProductReview]",{"range":"411","text":"412"},"Update the dependencies array to be: [dispatch, keyword, myTopRatedProduct, pageNumber]",{"range":"413","text":"414"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo, userList.length, users]",{"range":"415","text":"416"},"Update the dependencies array to be: [dispatch, userId, user, successUpdate, history]",{"range":"417","text":"418"},[2708,2762],"[dispatch, orderId, order, successPay, successDeliver, userInfo, history]",[1608,1647],"[dispatch, match, product._id, successProductReview]",[1455,1486],"[dispatch, keyword, myTopRatedProduct, pageNumber]",[1367,1411],"[dispatch, history, successDelete, userInfo, userList.length, users]",[1387,1425],"[dispatch, userId, user, successUpdate, history]"]